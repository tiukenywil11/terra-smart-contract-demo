"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSigner = void 0;
const terra_js_1 = require("@terra-money/terra.js");
const cli_ux_1 = require("cli-ux");
const path = require("path");
const config_1 = require("../config");
exports.getSigner = ({ network, signerId, keysPath, lcd, }) => {
    const localterra = new terra_js_1.LocalTerra();
    if (network === "localterra" &&
        Object.prototype.hasOwnProperty.call(localterra.wallets, signerId)) {
        cli_ux_1.cli.log(`using pre-baked '${signerId}' wallet on localterra as signer`);
        // @ts-ignore
        return localterra.wallets[signerId];
    }
    const keys = config_1.loadKeys(path.join(process.cwd(), keysPath));
    if (!keys[signerId]) {
        cli_ux_1.cli.error(`key for '${signerId}' does not exists.`);
    }
    return new terra_js_1.Wallet(lcd, keys[signerId]);
};
