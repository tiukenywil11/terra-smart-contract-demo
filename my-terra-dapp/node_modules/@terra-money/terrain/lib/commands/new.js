"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const child_process_1 = require("child_process");
const fs = require("fs-extra");
const request = require("superagent");
const Zip = require("adm-zip");
const cli_ux_1 = require("cli-ux");
const path = require("path");
class New extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(New);
        cli_ux_1.default.log("generating: ");
        cli_ux_1.default.action.start("- contract");
        if (flags.path) {
            process.chdir(flags.path);
        }
        fs.mkdirSync(args.name);
        process.chdir(args.name);
        fs.mkdirSync("contracts");
        process.chdir("contracts");
        child_process_1.execSync(`cargo generate --git https://github.com/CosmWasm/cw-template.git --branch ${flags.version} --name counter`);
        cli_ux_1.default.action.stop();
        process.chdir("..");
        cli_ux_1.default.action.start("- frontend");
        const file = fs.createWriteStream("frontend.zip");
        await new Promise((resolve, reject) => {
            request
                .get("https://github.com/iboss-ptk/terrain-frontend-template/archive/refs/heads/main.zip")
                .on("error", (error) => {
                reject(error);
            })
                .pipe(file)
                .on("finish", () => {
                cli_ux_1.default.action.stop();
                resolve(null);
            });
        });
        const zip = new Zip("frontend.zip");
        zip.extractAllTo(".", true);
        fs.renameSync("terrain-frontend-template-main", "frontend");
        fs.removeSync("frontend.zip");
        fs.copySync(path.join(__dirname, "..", "template"), process.cwd());
    }
}
exports.default = New;
New.description = "Create new dapp from template.";
New.examples = [
    "$ terrain new awesome-dapp",
    "$ terrain new awesome-dapp --path path/to/dapp",
];
New.flags = {
    path: command_1.flags.string({ description: "path to keep the project" }),
    version: command_1.flags.string({
        default: "0.16",
    }),
};
New.args = [{ name: "name", required: true }];
