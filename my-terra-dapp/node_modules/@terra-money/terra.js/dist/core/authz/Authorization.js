"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StakeAuthorizationValidators = exports.StakeAuthorization = exports.STAKING_AUTHORIZATION_TYPES = exports.GenericAuthorization = exports.SendAuthorization = exports.Authorization = exports.AuthorizationGrant = void 0;
var json_1 = require("../../util/json");
var Coins_1 = require("../Coins");
var Coin_1 = require("../Coin");
var AuthorizationGrant = /** @class */ (function (_super) {
    __extends(AuthorizationGrant, _super);
    function AuthorizationGrant(authorization, expiration) {
        var _this = _super.call(this) || this;
        _this.authorization = authorization;
        _this.expiration = expiration;
        return _this;
    }
    AuthorizationGrant.fromData = function (data) {
        var authorization = data.authorization, expiration = data.expiration;
        return new AuthorizationGrant(Authorization.fromData(authorization), new Date(expiration));
    };
    AuthorizationGrant.prototype.toData = function () {
        var _a = this, authorization = _a.authorization, expiration = _a.expiration;
        if ('toData' in authorization) {
            return {
                authorization: authorization.toData(),
                expiration: expiration.toISOString().replace(/\.000Z$/, 'Z'),
            };
        }
        throw new Error("amino is not supported for \"" + authorization.toProto()['@type'] + "\" authorization");
    };
    AuthorizationGrant.fromProto = function (data) {
        var authorization = data.authorization, expiration = data.expiration;
        return new AuthorizationGrant(Authorization.fromProto(authorization), new Date(expiration));
    };
    AuthorizationGrant.prototype.toProto = function () {
        var _a = this, authorization = _a.authorization, expiration = _a.expiration;
        return {
            authorization: authorization.toProto(),
            expiration: expiration.toISOString().replace(/\.000Z$/, 'Z'),
        };
    };
    return AuthorizationGrant;
}(json_1.JSONSerializable));
exports.AuthorizationGrant = AuthorizationGrant;
var Authorization;
(function (Authorization) {
    function fromData(data) {
        switch (data.type) {
            case 'msgauth/SendAuthorization':
                return SendAuthorization.fromData(data);
            case 'msgauth/GenericAuthorization':
                return GenericAuthorization.fromData(data);
        }
    }
    Authorization.fromData = fromData;
    function fromProto(proto) {
        switch (proto['@type']) {
            case '/cosmos.authz.v1beta1.GenericAuthorization':
                return GenericAuthorization.fromProto(proto);
            case '/cosmos.bank.v1beta1.SendAuthorization':
                return SendAuthorization.fromProto(proto);
            case '/cosmos.staking.v1beta1.StakeAuthorization':
                return StakeAuthorization.fromProto(proto);
        }
    }
    Authorization.fromProto = fromProto;
})(Authorization = exports.Authorization || (exports.Authorization = {}));
var SendAuthorization = /** @class */ (function (_super) {
    __extends(SendAuthorization, _super);
    function SendAuthorization(spend_limit) {
        var _this = _super.call(this) || this;
        _this.spend_limit = new Coins_1.Coins(spend_limit);
        return _this;
    }
    SendAuthorization.fromData = function (data) {
        return new SendAuthorization(Coins_1.Coins.fromData(data.value.spend_limit));
    };
    SendAuthorization.prototype.toData = function () {
        var spend_limit = this.spend_limit;
        return {
            type: 'msgauth/SendAuthorization',
            value: {
                spend_limit: spend_limit.toData(),
            },
        };
    };
    SendAuthorization.fromProto = function (proto) {
        return new SendAuthorization(Coins_1.Coins.fromData(proto.spend_limit));
    };
    SendAuthorization.prototype.toProto = function () {
        var spend_limit = this.spend_limit;
        return {
            '@type': '/cosmos.bank.v1beta1.SendAuthorization',
            spend_limit: spend_limit.toData(),
        };
    };
    return SendAuthorization;
}(json_1.JSONSerializable));
exports.SendAuthorization = SendAuthorization;
var GenericAuthorization = /** @class */ (function (_super) {
    __extends(GenericAuthorization, _super);
    function GenericAuthorization(msg) {
        var _this = _super.call(this) || this;
        _this.msg = msg;
        return _this;
    }
    GenericAuthorization.fromData = function (data) {
        return new GenericAuthorization(data.value.msg);
    };
    GenericAuthorization.prototype.toData = function () {
        var msg = this.msg;
        return {
            type: 'msgauth/GenericAuthorization',
            value: {
                msg: msg,
            },
        };
    };
    GenericAuthorization.fromProto = function (data) {
        return new GenericAuthorization(data.msg);
    };
    GenericAuthorization.prototype.toProto = function () {
        var msg = this.msg;
        return {
            '@type': '/cosmos.authz.v1beta1.GenericAuthorization',
            msg: msg,
        };
    };
    return GenericAuthorization;
}(json_1.JSONSerializable));
exports.GenericAuthorization = GenericAuthorization;
var STAKING_AUTHORIZATION_TYPES;
(function (STAKING_AUTHORIZATION_TYPES) {
    STAKING_AUTHORIZATION_TYPES["AUTHORIZATION_TYPE_UNSPECIFIED"] = "AUTHORIZATION_TYPE_UNSPECIFIED";
    STAKING_AUTHORIZATION_TYPES["AUTHORIZATION_TYPE_DELEGATE"] = "AUTHORIZATION_TYPE_DELEGATE";
    STAKING_AUTHORIZATION_TYPES["AUTHORIZATION_TYPE_UNDELEGATE"] = "AUTHORIZATION_TYPE_UNDELEGATE";
    STAKING_AUTHORIZATION_TYPES["AUTHORIZATION_TYPE_REDELEGATE"] = "AUTHORIZATION_TYPE_REDELEGATE";
})(STAKING_AUTHORIZATION_TYPES = exports.STAKING_AUTHORIZATION_TYPES || (exports.STAKING_AUTHORIZATION_TYPES = {}));
var StakeAuthorization /*extends JSONSerializable<StakeAuthorization.Proto>*/ = /** @class */ (function () {
    function StakeAuthorization(authorization_type, max_tokens, allow_list, deny_list) {
        this.authorization_type = authorization_type;
        this.max_tokens = max_tokens;
        this.allow_list = allow_list;
        this.deny_list = deny_list;
        // super()
    }
    StakeAuthorization.fromProto = function (proto) {
        return new StakeAuthorization(proto.authorization_type, proto.max_tokens ? Coin_1.Coin.fromData(proto.max_tokens) : undefined, proto.allow_list
            ? StakeAuthorizationValidators.fromProto(proto.allow_list)
            : undefined, proto.deny_list
            ? StakeAuthorizationValidators.fromProto(proto.deny_list)
            : undefined);
    };
    StakeAuthorization.prototype.toProto = function () {
        var _a = this, max_tokens = _a.max_tokens, allow_list = _a.allow_list, deny_list = _a.deny_list, authorization_type = _a.authorization_type;
        return {
            '@type': '/cosmos.staking.v1beta1.StakeAuthorization',
            max_tokens: max_tokens === null || max_tokens === void 0 ? void 0 : max_tokens.toData(),
            allow_list: allow_list === null || allow_list === void 0 ? void 0 : allow_list.toProto(),
            deny_list: deny_list === null || deny_list === void 0 ? void 0 : deny_list.toProto(),
            authorization_type: authorization_type,
        };
    };
    return StakeAuthorization;
}());
exports.StakeAuthorization = StakeAuthorization;
var StakeAuthorizationValidators /*extends JSONSerializable<StakeAuthorization.Proto>*/ = /** @class */ (function () {
    function StakeAuthorizationValidators(address) {
        this.address = address;
        // super()
    }
    StakeAuthorizationValidators.fromProto = function (proto) {
        return new StakeAuthorizationValidators(proto.address);
    };
    StakeAuthorizationValidators.prototype.toProto = function () {
        return {
            address: this.address,
        };
    };
    return StakeAuthorizationValidators;
}());
exports.StakeAuthorizationValidators = StakeAuthorizationValidators;
//# sourceMappingURL=Authorization.js.map